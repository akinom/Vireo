# -----
# sys setup   with puppet 
# -----
accounts 
   thesiscentralsu/monikasu/ratliffsu 
   with home directories
   shell for thesiscentralsu is csh

packages:
    ant
    git
    csh
    httpd  with ssl
    shibboleth
    postgresql
    mail configured with smtp.princeton.edu

/etc/httpd
	certs subdirectory 
	conf.d   		
		no ssl.conf
		no shib.conf
		init.conf thesis-central.conf 
	modules	
		mod_shib*.so    

/etc/shibboleth/
	shibboleth2.xml 
	attribute-map.xml
    # get idp-matadata.xml
    wget -O  /etc/shibboleth/idp-metadata.xml   https://idp.princeton.edu/idp/shibboleth

# ---------------
# file change at 
# ---------------
/etc/httpd/conf.d
/etc/httpd/conf
/etc/httpd/certs 

/etc/shibboleth 
# get idp-matadata.xml 
wget -O  /etc/shibboleth/idp-metadata.xml   https://idp.princeton.edu/idp/shibboleth

/var/www/html/shibboleth 

#########
### as thesiscentralsu 
#########
setup thesiscentralsu account 

# ---------------
# install play1 framework
# ---------------
cd ~
git clone https://github.com/playframework/play1.git
# installation instrauctions at https://www.playframework.com/documentation/1.1.1/install
cd play1
git checkout tags/1.3.0
git checkout -b tags/1.3.0
# this brings out a version from Jan 13 2016
cd framework
ant



#########
### as thesiscentralsu 
#########
ssh-keygen 
configure key with bitbucket repo 

# ---------------
# get vireo code
# ---------------
cd ~
mkdir Vireo
cd Vireo 
git init . 
git remote add origin git@bitbucket.org:princeton/thesiscentral-vireo.git
git fetch 
git checkout master
# checout master for production ;;; qa for qa


# ---------------
# link Viireo to play1 framework
# ---------------
cd ~/Vireo 
ln -s ../play1 play
# generate new secret key 
./play.sh secret 
# see whether new key is in conf/application.conf 
git diff 


# ---------------
# start and populate database
# ---------------
# define thesis-central-rds.aws.princeton.edu  domain name  for database server
#
# edit db connector in conf/application.conf
# start application which creates tables and seeds with vireo defaults
cd ~/Vireo
./play.sh start
# look at logs/application.log

# import princeton specific data  use sql from aws/thesis-central-seed-qa/prod.sql
psql -h thesis-central-rds.aws.princeton.edu -U db-user -d db-name -W <  aws/thesis-central-seed-XX.sql
# if tunneling you need to use the -p option
psql -p tunnel-port -h localhost  -U db-user -d db-name -W  <  aws/thesis-central-seed.sql


# ---------------
# configure Vireo admin accounts
# ----------------
# visit http://thsis-central-qa.aws.princeton.edu
# visit http://thsis-central.princeton.edu
# configure first account thesiscentral@princeton.edu
# configure second thesiscentralsu@princeton.edu at http://XXX.princeton.edu/login/PasswordAuthentication
# make second account admin
# check  email-bcc  at Admin | Settings | Email Settings
# create accounts for reviewers: Admin | System | Reset based o Department/Program Settings
# in QA import stsudent accounts - the file conf/prepopulate/Student-Data.tsv   is setup foe thesis.central.pu+NETID emails @gmail.com
# in PROD - place current years  file on PROD server - then import








# -------------
# after data was exported and imported into DataSpace
# prepare for following year
# --------------

#--- create sql dump that will be used to seed the database in the coming year
# in thesis central UI - delete all submissions, all students, all accounts without role
# close the system for submissions
# then export database:
pg_dump  --data-only --column-inserts -d db-name -h db-host-name -U db-user -W > aws/thesis-central-seed.sql
pg_dump  --data-only --column-inserts  -h localhost -p 11527 -d thesis-dev-db -U thesis-dev  -W > aws/thesis-central-seed.sql

# remove all insertions to person table

# then check that there are only insertions in the following tables
fgrep INSERT aws/thesis-central-seed.sql | awk '{print $3}' | sort -u
college
configuration
department
document_type
email_template
email_workflow_rule_conditions
email_workflow_rules
embargo_type
language
program

# make sure there are no REVOKE/GRANT/OWNER statements
fgrep REWOKE aws/thesis-central-seed.sql
fgrep GRANT aws/thesis-central-seed.sql
fgrep OWNER aws/thesis-central-seed.sql

# remove all SELECT pg_catalog.setval( .. statements
fgrep pg_catalog.setval aws/thesis-central-seed.sql


